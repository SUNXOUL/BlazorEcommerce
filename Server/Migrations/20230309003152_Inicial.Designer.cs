// <auto-generated />
using Ecommerce.Server.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Server.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230309003152_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Ecommerce.Shared.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Nombre = "Jabon Barra",
                            Url = "JabonBarra"
                        },
                        new
                        {
                            CategoryID = 2,
                            Nombre = "Jabon Liquido",
                            Url = "JabonLiguido"
                        });
                });

            modelBuilder.Entity("Ecommerce.Shared.Producto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoriaID = 1,
                            Descripcion = "Irish Spring",
                            ImgUrl = "https://desiweb.com.do/DesiWebEcommerce/views/document/product/201/1460/JAB20.jpg",
                            Nombre = "Jabon en barra Irish Spring",
                            Precio = 30m
                        },
                        new
                        {
                            ID = 2,
                            CategoriaID = 1,
                            Descripcion = "Asepxia",
                            ImgUrl = "https://supermercadosnacional.com/media/catalog/product/cache/fde49a4ea9a339628caa0bc56aea00ff/2/1/2162627-1.jpg",
                            Nombre = "Jabon en barra Asepxia ",
                            Precio = 30m
                        },
                        new
                        {
                            ID = 3,
                            CategoriaID = 2,
                            Descripcion = "Irish Spring",
                            ImgUrl = "https://almacen.do/wp-content/uploads/2020/06/Jabo%CC%81n-Li%CC%81quido-de-Ducha-Corporal-Irish-Spring-Original-20-oz-Front.jpg",
                            Nombre = "Jabon en Liquido Irish Spring ",
                            Precio = 70m
                        });
                });

            modelBuilder.Entity("Ecommerce.Shared.Producto", b =>
                {
                    b.HasOne("Ecommerce.Shared.Category", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
